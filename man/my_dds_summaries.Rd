% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/my_dds_summaries.R
\name{my_dds_summaries}
\alias{my_dds_summaries}
\title{Summarise many DESeq2 contrast}
\usage{
my_dds_summaries(dds_path, dds_rlog_path, dds_type = "general",
  contrast_name, treatment_names, output_path, my_lfcThreshold = 0,
  my_alpha = 0.1)
}
\arguments{
\item{dds_path}{DESeqDataSet. Obtained from running \link[DESeq2]{DESeq}. The object itself can be suplied or a quoted string defining the path to the \code{dds.rds} object (e.g. \code{my/folder/dds.rds}).}

\item{dds_rlog_path}{Quoted string to an existing path of a \code{.rds} object. To generate the heatmap the function will take the count matrix of rlog normalised pseudocounts as per \code{dds_rlog <- rlog(dds)}. Other count matrices can be supplied but the default is to z-sore normalise the input matrix and then filter the top 100 most extreme fold changes arranged by padj.}

\item{dds_type}{Character. Either \code{"general"} or \code{"group"} to specify if the contrast is factor vs factor or if instead it is a group vs group contrast controlling by an additional covariate. See the \href{https://bioconductor.org/packages/release/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#interactions}{Interactions section in the DESeq2 vignette} for further explanation.}

\item{contrast_name}{list of \code{contrast} as described in \code{\link[DESeq2:results]{results}}. Level names can be seen by calling \code{resultsNames(dds)}.}

\item{treatment_names}{list of the paired levels' names in the same order as \code{contrast_name} to select the columns in the \code{dds_rlog_path} matrix for ploting on the heatmap. This will select the columns to display in the heatmap, that must be the same as the \code{contrast_name} so you must ensure that the sample names are unique identifiers for which you can check by calling \code{colData(dds_path)}.}

\item{output_path}{Quoted string to an existing path to store output files.}

\item{my_lfcThreshold}{integer. Decision rule cutoff (e.g. DESeq2 is 0.10).The smaller the more restrictive the threshold will be and fewer genes will pop up.}

\item{my_alpha}{integer. Cutoff for the Log2 Fold Change (e.g. DESeq2 default is 0, however 1.5 is also very common). The bigger the more restrictive the threshold will be and fewer genes will pop up.}
}
\value{
A heatmap and a comma separated file names after the contrast name.
}
\description{
Exports a table (\code{.csv}) and a heatmap of specified DESeq2 contrasts. This function is ment to quickly explore many contrast of interest out of a \code{dds} object. this function is not transladable to other dataset other than the tibolone-palmitato dataset as the column selection for the heatmap plot requires the selection of column specific names than for this function were selected for this project. To make this function reusable define a way to select the columns for the heatmap. Importantly, this is only for the general case but the alternative to supply an object with the sample names used for group can also be applied to general but I do not have time for this right now.
}
\details{
This function only works if \code{dds_path} is encoded with ensembl IDs plus version (e.g. ENSBL00001111.1. The ".1" is important). If your data is not like that, then you will have to change the code in the section Mapping ID, by replacing the \code{str_replace} with another thing.
}
\examples{

# General constrasts
data(dds)
dds_rlog <- rlog(dds)

contrast_name <- list(c("condition","palmitato", "vehiculo"), c("condition","tib_pal", "vehiculo"), c("condition", "tibolona", "tib_pal"), c("condition","tibolona", "vehiculo"), c("condition", "palmitato", "tibolona"))

tmp_dir <- tempdir()

my_dds_summaries(dds_path = dds, dds_type = "general", dds_rlog = dds_rlog.rds, contrast_name = contrast_name, output_path = tmp_dir)

# Group-specific constrasts

dds$group <- factor(paste0(x$sex, x$condition))
dds$group <- relevel(dds$group, "femalevehiculo")
design(dds) <- ~ group
dds_group <- DESeq(dds)
dds_rlog <- rlog(dds)

contrast_name <- list(c("group","maletibolona", "malevehiculo"), c("group","malepalmitato", "malevehiculo"), c("group","maletib_pal", "malevehiculo"), c("group","malepalmitato", "maletibolona"))

treatment_names <- list(c("tibolona","vehiculo"), c("palmitato","vehiculo"), c("tib-pal","vehiculo"), c("palmitato","tibolona"))

my_dds_summaries(dds_path = dds_group, dds_type = "group", dds_rlog = dds_rlog, contrast_name = contrast_name, treatment_names = treatment_names, output_path = tmp_dir)

}
